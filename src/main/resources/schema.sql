--SCRIPT JUST FOR H2 DATABASE: Local Spring Profile

DROP TABLE IF EXISTS ROLE;
CREATE TABLE USER_TYPE
(
    USERTYPE_ID BIGINT       NOT NULL AUTO_INCREMENT,
    USER_TYPE   varchar(100) NOT NULL UNIQUE ,
    PRIMARY KEY (USERTYPE_ID)
);

DROP TABLE IF EXISTS USER;
CREATE TABLE USER
(
    USER_ID        BIGINT      NOT NULL AUTO_INCREMENT,
    BORROWED_BOOKS INTEGER DEFAULT 0,
    EMAIL          varchar(45) NOT NULL,
    FIRST_NAME     varchar(45) NOT NULL,
    LAST_NAME      varchar(45) NOT NULL,
    PHONE          varchar(45) NOT NULL,
    IS_ACTIVE      BOOLEAN DEFAULT TRUE,
    USER_CODE      INTEGER     NOT NULL UNIQUE,
    USERTYPE_ID    int(11) NOT NULL,
    PRIMARY KEY (USER_ID),
    CONSTRAINT FK_USERTYPE_ID FOREIGN KEY (USERTYPE_ID) REFERENCES USER_TYPE (USERTYPE_ID)
);

DROP TABLE IF EXISTS BOOK;
CREATE TABLE BOOK
(
    BOOK_ID      BIGINT       NOT NULL AUTO_INCREMENT,
    AUTHOR       VARCHAR(100) NOT NULL,
    CATEGORY     VARCHAR(45)  NOT NULL,
    IS_AVAILABLE BOOLEAN DEFAULT TRUE,
    ISBN         VARCHAR(100) NOT NULL UNIQUE,
    TITLE        VARCHAR(45)  NOT NULL,
    PRIMARY KEY (BOOK_ID)

);

DROP TABLE IF EXISTS BOOK_RECORD;
CREATE TABLE BOOK_RECORD
(
    RECORD_ID          BIGINT  NOT NULL AUTO_INCREMENT,
    DELAY_PENALIZATION DECIMAL DEFAULT NULL,
    DUE_DATE           DATE,
    IS_RETURNED        BOOLEAN DEFAULT FALSE,
    RENEWAL_CONT       INTEGER DEFAULT 0,
    RETURN_ON          DATE,
    TOOK_ON            DATE,
    TRANSACTION_NUMBER INTEGER NOT NULL UNIQUE,
    BOOK_BOOK_ID       INTEGER,
    USER_USER_ID       INTEGER,
    PRIMARY KEY (RECORD_ID),
    CONSTRAINT FK_BOOK_BOOK_ID FOREIGN KEY (BOOK_BOOK_ID) REFERENCES BOOK (BOOK_ID),
    CONSTRAINT FK_USER_USER_ID FOREIGN KEY (USER_USER_ID) REFERENCES USER (USER_ID)

)